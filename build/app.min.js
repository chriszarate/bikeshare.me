/*! See unminified source for credit and license. */
var app,config={};config.jqueryui={sortable:{handle:".title",items:"> li"},droppable:{hoverClass:"hovered"},dropTarget:$("#delete")},$.timeago.settings.refreshMillis=5e3,$.timeago.settings.strings=$.extend($.timeago.settings.strings,{suffixAgo:"",seconds:"Updated",minute:"1m",minutes:"%dm",hour:"1h",hours:"%dh",day:"1d",days:"%dd",month:"1mo",months:"%dmo"}),config.threshholds={danger:5,caution:10},config.colorFlags=["color1","color2","color3","color4","color5","color6"],config.els={app:{main:$("#main")},api:{button:$("#refresh")},geolocation:{main:$("#nearby-stations"),container:$("#nearby"),button:$("#geolocate"),close:$("#nearby .close-button"),message:$("#nearby h3")},messages:{error:$("#error"),warning:$("#warning"),city:$("#city"),map:$("#map")},snapshot:{button:$("#snapshot")},suggestions:{stations:{main:$("#suggestions"),input:$("#station-input"),button:$("#add")},city:{main:$("#cities"),input:$("#city-input"),button:$("#city")}}},this.JST=this.JST||{},this.JST["js/templates/station.tmpl"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+='<p class="station '+(null==(__t=color)?"":__t)+" "+(null==(__t=flags.station)?"":__t)+'" data-oid="'+(null==(__t=id)?"":__t)+'">\n  <span class="title">'+(null==(__t=title)?"":__t)+'</span>\n  <span class="availability">\n    <span class="bikes '+(null==(__t=flags.bikes||"new")?"":__t)+'">'+(null==(__t=available.bikes<10?"0":"")?"":__t)+(null==(__t=available.bikes)?"":__t)+'●</span>\n    <span class="docks '+(null==(__t=flags.docks||"new")?"":__t)+'">'+(null==(__t=available.docks<10?"0":"")?"":__t)+(null==(__t=available.docks)?"":__t)+"○</span>\n  </span>\n  ",alt&&(__p+='\n    <span class="alt">'+(null==(__t=alt||"")?"":__t)+"</span>\n  "),__p+="\n  ",distance&&(__p+='\n    <span class="distance">'+(null==(__t=distance||"")?"":__t)+"</span>\n  "),__p+="\n</p>\n";return __p};var Station=Backbone.Model.extend({defaults:function(){return{title:"Loading",color:0,order:this.collection.nextOrder()}},availability:{available:{},flags:{}},alt:"",distance:"",_updating:!1,updateAvailability:function(a){this._updating=!0,this.availability=a,this.trigger("change")},updateDistance:function(a){this._updating=!0,this.distance=a,this.trigger("change")},nextColor:function(){var a=this.get("color")+1;this.save({color:a<config.colorFlags.length?a:0})},getTitle:function(){return{title:config.stations&&config.stations[this.id]?config.stations[this.id].title:this.get("title")}},getColor:function(){return{color:config.colorFlags[this.get("color")]}},getAlternate:function(){return{alt:this.alt}},getDistance:function(){return{distance:this.distance}}}),Stations=Backbone.Collection.extend({model:Station,comparator:"order",nextOrder:function(){return this.length?this.last().get("order")+1:1}}),StationView=Backbone.Marionette.ItemView.extend({tagName:"li",template:JST["js/templates/station.tmpl"],serializeData:function(){return $.extend(this.model.toJSON(),this.model.availability,this.model.getTitle(),this.model.getAlternate(),this.model.getDistance(),this.model.getColor())},events:{click:"nextColor","drop:item":"clear"},initialize:function(a){this.options=a,this.listenTo(this.model,"change",this.render)},onBeforeRender:function(){this.model._changing||this.model._updating||this.$el.hide()},onRender:function(){this.model._changing||this.model._updating||this.$el.slideDown("fast"),this.model._updating=!1},nextColor:function(){this.options.editable&&this.model.nextColor()},clear:function(a){a.stopPropagation(),this.model.destroy()}}),StationsView=Backbone.Marionette.CollectionView.extend({itemView:StationView,tagName:"ul",events:{sortstart:"startDrag",sortstop:"stopDrag",sortupdate:"changeOrder"},initialize:function(a){this.options=a,this.listenTo(this.collection,"reset",this.updateAvailability),this.listenTo(this.collection,"add",this.updateStation),this.listenTo(this.collection,"add remove change sort reset",this.createSnapshot),this.options.editable&&(this.startDragDrop(),this.itemViewOptions={editable:!0})},addStation:function(a){this.collection.add({id:a.id,title:a.title},a),this.options.editable&&this.updateDragDrop()},updateStation:function(a,b,c){this.options.editable&&a.save(),c&&c.availability&&a.updateAvailability(c.availability),c&&c.distance&&a.updateDistance(c.distance)},updateAvailability:function(){config.stations&&this.populateAvailability(config.stations)},populateAvailability:function(a){this.collection.each(function(b){a[b.id]?a[b.id].availability&&b.updateAvailability(a[b.id].availability):b.updateAvailability({available:{},flags:{station:"inactive"}})})},populateDistance:function(a){this.collection.each(function(b){a[b.id]&&a[b.id].distance&&b.updateDistance(a[b.id].distance)})},createSnapshot:function(){if(this.options.editable&&!this.isSorting){var a=this.collection.map(app.snapshot.encode);app.vent.trigger("messages:snapshot:link",a.join("-"))}},startDragDrop:function(){this.$el.sortable(config.jqueryui.sortable),config.jqueryui.dropTarget.droppable(config.jqueryui.droppable).on("drop",this.processDrop)},updateDragDrop:function(){this.$el.sortable("refresh")},startDrag:function(){app.vent.trigger("suggestions:close"),config.jqueryui.dropTarget.show(),config.els.suggestions.stations.button.hide()},stopDrag:function(){config.jqueryui.dropTarget.hide(),config.els.suggestions.stations.button.show()},processDrop:function(a,b){b.draggable.trigger("drop:item")},changeOrder:function(){this.isSorting=!0,_.each(this.children._views,function(a){var b=a.$el.index()+1;b!==a.model.get("order")&&a.model.save({order:b})}),this.isSorting=!1,this.collection.sort()}}),AppController=Marionette.Controller.extend({home:function(a){var b=new Stations;this.getCity(a),b.localStorage=new Backbone.LocalStorage(config.city+"-stations"),app.main.show(new StationsView({collection:b,editable:!0})),app.nearby.show(new StationsView({collection:new Stations})),b.fetch({reset:!0}),$("body").removeClass("snapshot"),app.vent.trigger("suggestions:initialize:cities",config.api),app.vent.trigger("api:update:fetch",!0)},share:function(a,b){var c=app.snapshot.decode(b);if(this.setCity(a),c.length){var d=new Stations;app.main.show(new StationsView({collection:d})),d.reset(c),$("body").addClass("snapshot"),app.vent.trigger("api:update:fetch")}else this.error("Could not load snapshot.")},getCity:function(a){a||(window.localStorage?a=localStorage.getItem("city")||"nyc":this.error("Your browser does not support local storage.")),this.setCity(a)},setCity:function(a){a=a.replace(/[ \/]+/,""),config.api[a]?(config.city=a,localStorage.setItem("city",a),app.vent.trigger("messages:city:change",a),delete config.stations):(this.setCity("nyc"),this.error("Unsupported city."))},error:function(a){Backbone.history.navigate("",!0),app.vent.trigger("messages:error",a)}}),AppRouter=Marionette.AppRouter.extend({appRoutes:{":city/:stations":"share","*unknown":"home"}});app=new Backbone.Marionette.Application,app.addRegions({main:"#stations",nearby:"#nearby-stations"}),app.addInitializer(function(){app.router=new AppRouter({controller:new AppController})}),app.on("initialize:after",function(){Backbone.history.start({pushState:!0})}),app.module("api",function(a,b,c,d,e){var f=[["/"," / "],[" +"," "],["Street","St"],[" st$"," St"],["St. /","St /"],["Avenue","Ave"],["Av ","Ave "],["Av$","Ave"],["East ([0-9])","E $1"],["West ([0-9])","W $1"],[" and "," & "],["Plz","Plaza"],["Pza","Plaza"],["Place","Pl"],["Square","Sq"],["Court","Ct"],["Crt","Ct"],[" - ","—"],["'","’"],["^[0-9]+[—_]",""]],g=function(a){return a/1e6},h=function(c){b.vent.trigger("messages:reset"),b.vent.trigger("messages:api:loading"),e(".bikes, .docks").hide(),a.promise=e.ajax({url:config.api[config.city].url,dataType:"jsonp",timeout:5e3}).then(i).then(k).fail(l),c&&b.vent.trigger("geolocation:initialize")},i=function(a){var c={id:"id",status:"status",title:"name",lat:"lat",lng:"lng",bikes:"bikes",docks:"free"},d=config.api[config.city].attributeMap||c,h=config.api[config.city].formatter;d.root&&(a=a[d.root]),config.stations={},e.each(a,function(a,b){var c=b[d.id],e=p(b[d.title],f),i=b[d.bikes],k=b[d.docks],l=b[d.lat],m=b[d.lng];config.stations[c]={id:c,title:h?h(e):e,alt:config.api[config.city].altNames[c]||!1,lat:Math.abs(l)>1e3?g(l):l,lng:Math.abs(m)>1e3?g(m):m,availability:{available:{bikes:i,docks:k},flags:{station:j(b[d.status]),bikes:q(i),docks:q(k)}}}}),e.isEmptyObject(config.stations)?l():b.vent.trigger("messages:api:updated",new Date)},j=function(a){switch(a){case"In Service":case"Active":case"true":case!0:case"1":case 1:case void 0:return"active";default:return"inactive"}},k=function(){e.isEmptyObject(config.stations)||(b.main.currentView.populateAvailability(config.stations),b.nearby.currentView&&b.nearby.currentView.populateAvailability(config.stations),-1===c.history.fragment.indexOf("/")&&b.vent.trigger("suggestions:initialize:stations",config.stations))},l=function(){b.vent.trigger("geolocation:hide"),b.vent.trigger("messages:api:error","Could not connect to the server.")},m=function(a){return a.replace(/\w\S*/g,function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()})},n=function(a,b){var c=b[b.length-1],d=["11","12","13"],e="th";return-1===d.indexOf(b)&&("1"===c&&(e="st"),"2"===c&&(e="nd"),"3"===c&&(e="rd")),a.replace(b,b+e)},o=function(a){return a.replace(/([0-9]+) /g,n).replace(/([0-9]+)$/,n)},p=function(a,b){return b.forEach(function(b){var c=new RegExp(b[0],"g");a=a.replace(c,b[1])}),a},q=function(a){return a<config.threshholds.danger?"danger":a<config.threshholds.caution?"caution":"ok"};config.api={nyc:{id:"nyc",title:"New York CitiBike",url:"http://api.citybik.es/citibikenyc.json",map:"http://api.citybik.es/citibikenyc.html",lat:40730286,lng:-73990764,formatter:o,altNames:{382:"Union Sq",285:"Union Sq",497:"Union Sq",293:"Astor Pl",304:"Bowling Green",444:"Madison Sq",402:"Madison Sq",517:"Grand Central",519:"Grand Central",318:"Grand Central",153:"Bryant Park",465:"Times Sq",490:"Penn Station",492:"Penn Station",379:"Penn Station",521:"Penn Station",477:"Port Authority",529:"Port Authority",538:"Rockefeller Center",504:"Stuyvesant Town",511:"Stuyvesant Town",2003:"Stuyvesant Town",487:"Stuyvesant Town / Peter Cooper Village",545:"Peter Cooper Village",387:"Brooklyn Bridge / City Hall",3002:"World Financial Center",427:"Staten Island Ferry",259:"Staten Island Ferry",534:"Staten Island Ferry",315:"Pier 11",458:"Chelsea Piers",459:"Chelsea Piers",498:"Herald Sq",505:"Herald Sq"}},montreal:{id:"montreal",oid:21,title:"BIXI Montréal",url:"http://api.citybik.es/bixi.json",lat:45507330,lng:-73578450,altNames:{}},dc:{id:"dc",oid:24,title:"Washington D.C. Capital BikeShare",url:"http://api.citybik.es/capitalbikeshare.json",lat:38894e3,lng:-76947974,altNames:{}},chicago:{id:"chicago",oid:55,title:"Chicago Divvy",url:"http://api.citybik.es/divvybikes.json",lat:41897448,lng:-87628722,altNames:{}},london:{id:"london",oid:12,title:"London Barclays Cycle Hire",url:"http://api.citybik.es/barclays.json",lat:51488365,lng:-129361,altNames:{}},paris:{id:"paris",oid:3,title:"Paris Velib",url:"http://api.citybik.es/velib.json",lat:48874575,lng:2356796,formatter:m,altNames:{}},msp:{id:"msp",oid:25,title:"Minneapolis–St. Paul NiceRide",url:"http://api.citybik.es/niceride.json",lat:44975641,lng:-93272185,altNames:{}},melbourne:{id:"melbourne",oid:22,title:"Melbourne Bike Share",url:"http://api.citybik.es/melbourne.json",lat:-37818306,lng:144945923,altNames:{}},mexico:{id:"mexico",oid:13,title:"México, D.F. ECOBICI",url:"http://api.citybik.es/ecobici.json",lat:19434353,lng:-99203220,formatter:m,altNames:{}},barcelona:{id:"barcelona",oid:6,title:"Barcelona Bicing",url:"http://api.citybik.es/bicing.json",lat:41398298,lng:2153128,altNames:{}},brisbane:{id:"brisbane",oid:16,title:"CityCycle Brisbane",url:"http://api.citybik.es/citycycle.json",lat:-27471297,lng:153022570,formatter:m,altNames:{}},seville:{id:"seville",oid:0,title:"Sevilla Sevici",url:"http://api.citybik.es/sevici.json",lat:37371724,lng:-6003312,formatter:m,altNames:{}},dublin:{id:"dublin",oid:1,title:"Dublin dublinbikes",url:"http://api.citybik.es/dublin.json",lat:53330662,lng:-6260177,formatter:m,altNames:{}},wien:{id:"wien",oid:17,title:"CityBike Wien",url:"http://api.citybik.es/wien.json",lat:48192986,lng:16398464,altNames:{}},denver:{id:"denver",oid:26,title:"Denver B-cycle",url:"http://api.citybik.es/denver.json",lat:39679180,lng:-104962990,altNames:{}},desmoines:{id:"desmoines",oid:27,title:"Des Moines B-cycle",url:"http://api.citybik.es/desmoines.json",lat:41587640,lng:-93626200,altNames:{}},sanantonio:{id:"sanantonio",oid:28,title:"San Antonio B-cycle",url:"http://api.citybik.es/sanantonio.json",lat:29443560,lng:-98479460,altNames:{}},torino:{id:"torino",oid:29,title:"Torino [TO]Bike",url:"http://api.citybik.es/tobike.json",lat:45067019,lng:7678306,altNames:{}},hawaii:{id:"hawaii",oid:30,title:"Hawai'i B-cycle",url:"http://api.citybik.es/hawaii.json",lat:21392340,lng:-157740980,altNames:{}},ljubljana:{id:"ljubljana",oid:31,title:"Ljubljana BicikeLJ",url:"http://api.citybik.es/bicikelj.json",lat:46057421,lng:14510265,formatter:m,altNames:{}},boulder:{id:"boulder",oid:32,title:"Boulder B-cycle",url:"http://api.citybik.es/boulder.json",lat:40013770,lng:-105280870,altNames:{}},milano:{id:"milano",oid:33,title:"Milano BikeMi",url:"http://api.citybik.es/bikemi.json",lat:45452319,lng:9177407,altNames:{}},roma:{id:"roma",oid:38,title:"Roma Bike Sharing",url:"http://api.citybik.es/rome.json",lat:41900074,lng:12473173,altNames:{}},venezia:{id:"venezia",oid:39,title:"Bike Sharing Venezia",url:"http://api.citybik.es/venice.json",lat:45479978,lng:12230497,altNames:{}},toronto:{id:"toronto",oid:41,title:"BIXI Toronto",url:"http://api2.citybik.es/toronto.json",lat:43653743,lng:-79388820,altNames:{}},madison:{id:"madison",oid:42,title:"Madison B-cycle",url:"http://api.citybik.es/madison.json",lat:43067540,lng:-89414030,altNames:{}},ottawa:{id:"ottawa",oid:45,title:"Ottawa Capital BIXI",url:"http://api.citybik.es/ottawa.json",lat:45428997,lng:-75691066,altNames:{}},broward:{id:"broward",oid:46,title:"Broward B-cycle",url:"http://api.citybik.es/broward.json",lat:26167390,lng:-80100320,altNames:{}},charlotte:{id:"charlotte",oid:47,title:"Charlotte B-cycle",url:"http://api.citybik.es/charlotte.json",lat:35224430,lng:-80839780,altNames:{}},fortworth:{id:"fortworth",oid:48,title:"Fort Worth B-cycle",url:"http://api.citybik.es/fortworth.json",lat:32745780,lng:-97311300,altNames:{}},greenville:{id:"greenville",oid:49,title:"Greenville B-cycle",url:"http://api.citybik.es/greenville.json",lat:34845010,lng:-82404480,altNames:{}},houston:{id:"houston",oid:50,title:"Houston B-cycle",url:"http://api.citybik.es/houston.json",lat:29757370,lng:-95367620,altNames:{}},nashville:{id:"nashville",oid:51,title:"Nashville B-cycle",url:"http://api.citybik.es/nashville.json",lat:36162520,lng:-86774260,altNames:{}},spartanburg:{id:"spartanburg",oid:52,title:"Spartanburg B-cycle",url:"http://api.citybik.es/spartanburg.json",lat:34947470,lng:-81921740,altNames:{}},kansascity:{id:"kansascity",oid:53,title:"Kansas City B-cycle",url:"http://api.citybik.es/kansas.json",lat:39110540,lng:-94580740,altNames:{}},omaha:{id:"omaha",oid:54,title:"Omaha B-cycle",url:"http://api.citybik.es/omaha.json",lat:41238050,lng:-96013500,altNames:{}},padova:{id:"padova",oid:56,title:"GoodBike Padova",url:"http://api.citybik.es/goodbike.json",lat:45408944,lng:11878805,altNames:{}}},a.promise=!1,config.els.api.button.on("click",h),b.vent.bind("api:update:fetch",h)}),app.module("geolocation",function(a,b,c,d,e){var f={enableHighAccuracy:!0,desiredAccuracy:20,warnableAccuracy:76.2,acceptableAccuracy:152.4,usefulRadius:.25,flexRadius:5,timeout:5e3,maximumAge:0},g={standard:"Nearby",unusable:"Your location cannot be found within %str% ft.",inaccurate:"Your location is accurate to about %str% ft.",tooDistant:"You are %str% miles from the nearest station.",betterChoice:"Switch to %str%?",error:"Unable to find your location.",errorPermission:"Permission to find your location was denied.",errorTimeout:"The location request timed out."},h=!1,i=function(a,b){var c=!1,d=0,e=function(b){d>0&&b.coords.accuracy<=f.desiredAccuracy&&(i(),a(b)),d+=1,c=b},g=function(d){i(),b(c,d),c&&c.coords.accuracy<f.acceptableAccuracy&&a(c)},i=function(){h=!1,navigator.geolocation.clearWatch(j),clearTimeout(k)},j=navigator.geolocation.watchPosition(e,g,f),k=setTimeout(g,f.timeout)},j=function(c){a.pos={lat:c.coords.latitude,lng:c.coords.longitude},config.els.geolocation.container.removeClass("loading"),b.api.promise.then(function(){e.each(config.stations,function(b,c){c.rank=t(c,a.pos),c.distance=v(c.rank)}),b.main.currentView.populateDistance(config.stations);var c=_.sortBy(config.stations,"rank");m(c)})},k=function(a,b){if(config.els.geolocation.container.removeClass("loading"),a)a.coords.accuracy>f.acceptableAccuracy?n(g.unusable,u(f.acceptableAccuracy)):a.coords.accuracy>f.warnableAccuracy&&n(g.inaccurate,u(a.coords.accuracy));else if(b&&b.code)switch(b.code){case b.PERMISSION_DENIED:n(g.errorPermission);break;case b.TIMEOUT:n(g.errorTimeout);break;default:n(g.error)}else n(g.error)},l=function(a){a.stopPropagation();var c=e(event.target).closest("p").data("oid");b.main.currentView.addStation(config.stations[c])},m=function(c){e.each(c,function(c,d){if(0===c&&d.rank>f.flexRadius){var h=!1;return e.each(config.api,function(b,c){var d={lat:s(c.lat),lng:s(c.lng)};return t(d,a.pos)<f.flexRadius?(h=!0,n(g.betterChoice,'<a href="/'+c.id+'">'+c.title+"</a>"),!1):void 0}),h||n(g.tooDistant,Math.round(d.rank)),!1}(5>c||d.rank<f.usefulRadius)&&b.nearby.currentView.addStation(e.extend({},d,{distance:v(d.rank,!0)}))})},n=function(a,b){b&&(a=a.replace("%str%",b)),config.els.geolocation.message.html(a)},o=function(){navigator.geolocation&&!h&&("true"===b.localstorage.get("disable-geolocation")?config.els.geolocation.button.show():(h=!0,b.nearby.currentView.collection.reset(),n(g.standard),config.els.geolocation.button.hide(),config.els.geolocation.container.addClass("loading"),config.els.geolocation.container.slideDown(),i(j,k)))},p=function(){b.localstorage.set("disable-geolocation","false"),o()},q=function(){config.els.geolocation.container.slideUp(),config.els.geolocation.button.show(),b.localstorage.set("disable-geolocation","true")},r=function(){config.els.geolocation.container.slideUp()},s=function(a){return a/1e6},t=function(a,b){var c=function(a){return a*Math.PI/180},d=3961,e=c(a.lat),f=c(a.lng),g=c(b.lat),h=c(b.lng),i=g-e,j=h-f,k=Math.pow(Math.sin(i/2),2)+Math.cos(e)*Math.cos(g)*Math.pow(Math.sin(j/2),2),l=2*Math.atan2(Math.sqrt(k),Math.sqrt(1-k)),m=l*d;return Math.round(1e3*m)/1e3},u=function(a){return Math.round(3.28084*a)},v=function(a,b){return.12>=a?10*Math.round(5280*a/10)+" ft":1>a||b&&a<=f.flexRadius?Math.round(10*a)/10+" mi":""},w=function(){navigator.geolocation&&(config.els.api.button.on("click",o),config.els.geolocation.button.on("click",p),config.els.geolocation.close.on("click",q),config.els.geolocation.main.on("click",l),o())};b.vent.bind("geolocation:initialize",w),b.vent.bind("geolocation:update",o),b.vent.bind("geolocation:hide",r)}),app.module("localstorage",function(a){a.set=function(a,b){window.localStorage&&window.localStorage.setItem(a,b)},a.get=function(a){return window.localStorage?window.localStorage.getItem(a):null}}),app.module("messages",function(a,b,c,d,e){var f=b.localstorage.get("last-updated"),g=!1,h=7e3,i=function(a){config.els.messages.error.html(a).slideDown(),setTimeout(function(){config.els.messages.error.slideUp()},h)},j=function(a){f=null,config.els.api.button.html("Error").removeClass(),i(a)},k=function(){g=!0,config.els.api.button.html("Loading").removeClass().addClass("dimmed")},l=function(a){config.els.messages.warning.html(a).slideDown(),setTimeout(function(){config.els.messages.warning.slideUp()},h)},m=function(){config.els.messages.error.slideUp()},n=function(a){if("undefined"==typeof a){if(null!==f&&!g){var c=e.timeago(f);c!==config.els.api.button.html()&&config.els.api.button.html(c).removeClass().toggleClass("old","1 min"!==c)}}else f=a,g=!1,b.localstorage.set("last-updated",f),config.els.api.button.html("Updated").removeClass().addClass("dimmed")},o=function(a){var b=config.api[a],c=b.map||b.url.replace(/\.json$/,".html");config.els.messages.city.html(b.title),config.els.messages.map.attr("href",c)},p=function(a){config.els.snapshot.button.attr("href","/"+config.city+"/"+a),config.els.snapshot.button.toggle(Boolean(a))};b.vent.bind("messages:error",i),b.vent.bind("messages:warn",l),b.vent.bind("messages:reset",m),b.vent.bind("messages:api:error",j),b.vent.bind("messages:api:loading",k),b.vent.bind("messages:api:updated",n),b.vent.bind("messages:city:change",o),b.vent.bind("messages:snapshot:link",p),setInterval(n,1e3)}),app.module("snapshot",function(a,b,c,d,e){var f=new Base62,g=/^[a-e][A-Za-z0-9]+$/,h="abcdef",i=/[-\.]/;this.encode=function(a){return h[a.attributes.color]+f.encode(parseInt(a.id,10))},this.decode=function(a){var b=[];return e.each(a.split(i),function(a,c){if(g.test(c)){var d=Math.max(h.indexOf(c[0]),0),e=parseInt(f.decode(c.substring(1)),10);isNaN(e)||b.push({id:e,color:d})}}),config.els.snapshot.button.hide(),b}}),app.module("suggestions",function(a,b,c,d,e){var f=[["Ft.","fort"],["St.","saint"],["St","street"],["Ave","avenue"],["Pl","place"],["Sq","square"],["N","north"],["E","east"],["S","south"],["W","west"],["NE","northeast"],["NW","northwest"],["SE","southeast"],["SW","southwest"],["&","and"]],g=[["CitiBike","nyc"],["B-cycle","bcycle"],["[TO]Bike","tobike"],["México","mexico"],["D.F.","df"],["Montréal","montreal"]],h=function(a,b){var c=[],d=a.split(/[\/,— ]+/);return b.forEach(function(a){-1!==d.indexOf(a[0])&&c.push(a[1])}),e.merge(d,c)},i=function(a,b){var c=b.alt?" "+b.alt:"";b.tokens=h(b.title+c,f)},j=function(a,b){b.tokens=h(b.title,g)},k=function(a,c){e(this).typeahead("setQuery","").blur(),b.main.currentView.addStation(c)},l=function(a,b){n(),b.id!==c.history.fragment&&(config.els.suggestions.stations.button.hide(),c.history.navigate(b.id,!0))},m=function(a){var b={id:a.id,title:a.title,alt:a.alt||"",distance:a.distance||"",color:"suggestion",available:{},flags:{}};return e.extend(b,a.availability),JST["js/templates/station.tmpl"](b)},n=function(){config.els.suggestions.stations.input.typeahead("setQuery","").blur(),config.els.suggestions.city.input.typeahead("setQuery","").blur()},o=function(){config.els.suggestions.stations.button.hide(),config.els.suggestions.stations.main.show(),config.els.suggestions.stations.input.focus()},p=function(){var a=config.els.suggestions.city.button.outerWidth();config.els.suggestions.city.button.hide(),config.els.suggestions.city.main.width(a).show(),config.els.suggestions.city.input.focus()},q=function(){config.els.suggestions.stations.main.hide(),config.els.suggestions.stations.button.show()},r=function(){config.els.suggestions.city.main.hide(),config.els.suggestions.city.button.show()},s=function(){var a=config.els.suggestions.stations.input.offset().top;a>300&&e("html, body").animate({scrollTop:a-100})},t=function(a){config.els.suggestions.stations.input.typeahead("destroy"),e.each(a,i),config.els.suggestions.stations.input.typeahead({name:"stations-"+(new Date).getTime(),valueKey:"title",local:a,template:m,limit:10}),config.els.suggestions.stations.button.slideDown()},u=function(a){config.els.suggestions.city.input.typeahead("destroy"),e.each(a,j),config.els.suggestions.city.input.typeahead({name:"city-"+(new Date).getTime(),valueKey:"title",local:a,limit:0})};config.els.suggestions.stations.button.on("click",o),config.els.suggestions.stations.input.on("typeahead:selected",k).on("typeahead:opened",s).on("typeahead:closed",q),config.els.suggestions.city.button.on("click",p),config.els.suggestions.city.input.on("typeahead:selected",l).on("typeahead:opened",s).on("typeahead:closed",r),b.vent.bind("suggestions:initialize:stations",t),b.vent.bind("suggestions:initialize:cities",u),b.vent.bind("suggestions:close",n)}),app.start();
//# sourceMappingURL=/build/app.js.map